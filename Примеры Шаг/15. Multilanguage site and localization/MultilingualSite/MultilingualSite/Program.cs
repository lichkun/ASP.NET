using Microsoft.EntityFrameworkCore;
using MultilingualSite.Models;
using MultilingualSite.Services;

var builder = WebApplication.CreateBuilder(args);

// Получаем строку подключения из файла конфигурации
string? connection = builder.Configuration.GetConnectionString("DefaultConnection");

// добавляем контекст ApplicationContext в качестве сервиса в приложение
builder.Services.AddDbContext<ClubContext>(options => options.UseSqlServer(connection));

// Все сессии работают поверх объекта IDistributedCache, и ASP.NET Core 
// предоставляет встроенную реализацию IDistributedCache
builder.Services.AddDistributedMemoryCache();
builder.Services.AddSession(options =>
{
    options.IdleTimeout = TimeSpan.FromMinutes(10); // Длительность сеанса (тайм-аут завершения сеанса)
    options.Cookie.Name = "Session"; // Каждая сессия имеет свой идентификатор, который сохраняется в куках.

});
builder.Services.AddScoped<ILangRead, ReadLangServices>();
// Добавляем сервисы MVC
builder.Services.AddControllersWithViews();

var app = builder.Build();
app.UseStaticFiles(); // обрабатывает запросы к файлам в папке wwwroot
app.UseSession();   // Добавляем middleware-компонент для работы с сессиями

app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Club}/{action=Index}/{id?}");

app.Run();
